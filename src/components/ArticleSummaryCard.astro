---
import Tag from "./Tag.astro";
interface Props {
  post: CollectionEntry<"blog">;
}
const {
  post: {
    slug,
    data: { tags, title },
  },
} = Astro.props;
console.log(Astro.props)
---

<article
  class="group/card relative box-border rounded-3xl ring-emerald-600 ring-offset-4 ring-offset-slate-50 transition-all hover:ring-4 dark:ring-amber-300 dark:ring-offset-brand-primary-dark"
>
  <a
    href={`blog/${slug}`}
    class="relative z-10 flex h-full flex-col gap-8 overflow-hidden rounded-3xl transition-all"
  >
    <div
      class="relative z-0 -mb-20 overflow-hidden rounded-2xl shadow-inner before:absolute before:z-50 before:h-full before:w-full before:bg-gradient-to-b before:from-slate-900/20 before:to-slate-50/20 before:content-[''] group-hover/card:shadow-md dark:before:from-brand-primary-dark/50 dark:before:to-brand-primary-dark dark:group-hover/card:before:from-brand-primary-dark/5 dark:group-hover/card:before:to-brand-primary-dark h-72 sm:h-64 w-full"
    >
      <img
        class="h-72 w-full overflow-hidden rounded-2xl grayscale transition duration-1000 group-hover/card:scale-105 group-hover/card:grayscale-0 sm:h-64"
        src=`https://picsum.photos/seed/${slug}/800/600`
      />
    </div>
    <div class="relative z-10 flex-grow grayscale group-hover/card:grayscale-0">
      <div class="relative z-10 flex justify-start gap-2 px-4">
        {tags.map((tag: string) => <Tag tag={tag} />)}
      </div>
      <div class="flex flex-col gap-4 p-3 py-12">
        <div class="flex items-center justify-between text-sm opacity-50">
          <h2>5th September 2013</h2>
          <h3 class="flex gap-2 text-sm">
            <i
              data-feather="clock"
              class="relative top-px left-1 h-4 w-4 opacity-30"></i>
              <span id="reading-time">- min</span>
          </h3>
        </div>
        <h1
          class="prose mt-0 mb-0 text-3xl group-hover/card:text-emerald-700 dark:text-slate-300 dark:group-hover/card:text-amber-400"
        >
          {title}
        </h1>
      </div>
    </div>
  </a>
</article>

<script>
   const readingTimeSpan = document.getElementById('reading-time') as HTMLSpanElement

   // const readingTime = Math.round(readingTimeSpan.textContent.length / 200)


</script>
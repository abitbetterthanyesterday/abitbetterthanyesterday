---
import { getCollection } from "astro:content";
import ArticleSummaryCard from "../../components/ArticleSummaryCard.astro";
import Tag from "../../components/Tag.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
const allPosts = await getCollection("blog");
const allTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];
---

<BaseLayout title="about">
  <main class="mx-auto max-w-7xl pt-12">
    <div class=" mb-8 flex">
      <div class="relative">
      <i class="absolute top-3 left-4 h-8 text-slate-400" data-feather="search"
      ></i>
      <input
      id="search"
        type="text"
        class="text-md lg:text-lg rounded-xl bg-slate-200  px-5 py-4 pl-12 text-slate-800 shadow-inner outline-emerald-600 placeholder:text-slate-400/95 dark:bg-brand-primary-light"
        placeholder="Search"
      />
      <span class="absolute top-3 right-4 h-8 text-emerald-200 dark:bg-amber-600 dark:text-amber-200 bg-emerald-600  rounded-full px-2 py-1" data-search-results-count 
      >{allPosts.length}</span>
      </div>
    </div>
    <ul class="flex flex-wrap gap-2 md:gap-4">
      {
        allTags.map((tag) => (
          <li>
            <Tag tag={tag} />
          </li>
        ))
      }
    </ul>

    <div class="grid grid-cols-1 gap-12 py-12 sm:grid-cols-3">
      {
        allPosts.map((entry, index) => {
          return (
            <div
              data-blog-card
              data-title={entry.data.title}
              class="relative flex animate-fade opacity-0"
              style={{ animationDelay: `${index * 200}ms` }}
            >
              <ArticleSummaryCard post={entry} />
            </div>
          );
        })
      }
    </div>
  </main>
</BaseLayout>

<script>
   const blogsCards = [...document.querySelectorAll('[data-blog-card]')] as HTMLDivElement[]

   (document.getElementById('search') as HTMLInputElement).addEventListener("input", (e) => {
      let searchResultCount = 0;
      // @ts-ignore
      const search = e.target.value;
      blogsCards.forEach((card) => {
         const matchSearch = (card.dataset.title as string).toLowerCase().includes(search.toLowerCase());
         card.classList.remove('animate-fade','opacity-0');
         if (matchSearch){
            card.classList.remove('hidden')
            searchResultCount++;
         } else {
            card.classList.add('hidden')
         }
      })
   

      const countDisplay = document.querySelector('[data-search-results-count]') as HTMLSpanElement
      if(search.length === 0){
         countDisplay.textContent = blogsCards.length;
         return;
      }

      countDisplay.textContent = searchResultCount.toString()

   });

</script>
---
import AboutLayout from "../../layouts/AboutLayout.astro";
---

<AboutLayout>
  <h1>About</h1>

  <p>Hi, I'm Aloys, or simply Alo.</p>

  <button
    class="flex items-center gap-2"
    data-collapse-button
    data-target="section-1"
  >
    As a person <i
      data-feather="arrow-right-circle"
      data-rotate-section-1
      class="rotate-90 transition-transform"></i>
  </button>

  <div data-collapse-section-1 class="overflow-hidden transition-all">
    <p>Let's start with the most important bit: the non-work related stuff.</p>

    <p>I enjoy and practice outdoor sports quite a bit.</p>
    <p>Right now, I tend to spend my weekends either kitesurfing or surfing.</p>
    <p>
      In the past, I spent a lot of time in the Alps, practicing acrobatic
      paragliding, skiing or simply tramping up the mountains.
    </p>
  </div>

  <h2>As a developer</h2>

  <p>I am currently working as front-end developper in Brisbane.</p>

  <p>
    In the past, I mainly worked as a fullstack developper - but my area of
    expertise remains in the front end.
  </p>
  <p>I have worked in production with different technologies and frameworks.</p>

  <p>
    On the front side, I had the chance to work in production with all the main
    frameworks: Vue, React, Svelte, Angular and even AngularJS.
  </p>
  <p>
    I don't fret over vanilla JS, but I do see the value of reaching one to a
    framework **when needed**.
  </p>
  <p>
    Speaking of JS, I rarely used JavaScript anymore - I have switched to
    TypeScript for 99% of my work for a few years now.
  </p>

  <p>
    For the backend, my tool of choice as a freelancer has been Laravel as it
    gets the job done - but these days, I would probably reach out to a JS
    back-end framework to limit context switching.
  </p>
  <p>I also had the chance to dabble in Rust when working in San Francisco.</p>
  <p>~/perso/gh~/perso/gh</p>

  <h2>Next goals</h2>

  <p>This year, I am experimenting with the 12 Weeks Year.</p>
  <p>
    Without going into details, the idea is to approach your year in four
    chunks, in a sort-of agile way.
  </p>

  <p>The goals for my next 12 weeks are:</p>

  <p>
    - Getting this website off the ground (I have meant to do so for two years
    now!),
  </p>
  <p>- Loose 6 kgs</p>
  <p>- Financial</p>

  <p>
    I have few projects going on at the minute, one of thenm being the website
    you're currently on.
  </p>
  <p>
    For the past few years, I meant to open a digital-garden-like website, and
    here it is.
  </p>
  <p></p>
  <p>
    This site is powered by Astro, and it's where I spend most of my outside of
    work
  </p>

  <p>Feel free to poke around my website and stay as long as you wish.</p>
  <p>I publish my thoughts, learnings and mistakes.</p>

  <p>If you find anything that spark you attention, feel free to reach out.</p>
  <p>I am always keen to connect with people.</p>

  <p>Alo.</p>
</AboutLayout>

<script>
  const buttons = [
    ...document.querySelectorAll("[data-collapse-button]"),
  ] as HTMLButtonElement[];

  for (const button of buttons) {
    const collapseElement = document.querySelector(
      `[data-collapse-${button.dataset.target}]`
    ) as HTMLDivElement;

    const rotateElement = document.querySelector(
      `[data-rotate-${button.dataset.target}]`
    ) as HTMLDivElement;

    collapseElement.classList.toggle(
      `max-h-[${collapseElement.scrollHeight}px]`
    );
    // We set the initial max-height, otherwise the animation won't work

    button.addEventListener("click", () => {
      collapseElement.classList.toggle(
        `max-h-[${collapseElement.scrollHeight}px]`
      );
      collapseElement.classList.toggle("max-h-0");
      rotateElement.classList.toggle("rotate-90");
      rotateElement.classList.toggle("rotate-0");
    });
  }
</script>
